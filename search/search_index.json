{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to RevFrame This framework will help in scaling Machine Learning/Deep Learning/Artificial Intelligence/Natural Language Processing Models to Web Application level almost without any time. Prerequisites python - Main Programming Language for this Framework flask - Backend that connects User and the Model. docker - Docker for Virtualization and Deployment. revframe - revframe github link . RevFrame Project layout Frontend/ # This is the Frontend Folder. It features a django Application ... # Other relevant pages, images and other files. Backend/ models/ # Folder that has the model related files model.py # Actual Model file ... # Other relevant pages, images and other files. docker-compose.yml # This is a docker compose file that spins up Frontend & Backend Containers Next Steps Follow this link","title":"Home"},{"location":"#welcome-to-revframe","text":"This framework will help in scaling Machine Learning/Deep Learning/Artificial Intelligence/Natural Language Processing Models to Web Application level almost without any time.","title":"Welcome to RevFrame"},{"location":"#prerequisites","text":"python - Main Programming Language for this Framework flask - Backend that connects User and the Model. docker - Docker for Virtualization and Deployment. revframe - revframe github link .","title":"Prerequisites"},{"location":"#revframe-project-layout","text":"Frontend/ # This is the Frontend Folder. It features a django Application ... # Other relevant pages, images and other files. Backend/ models/ # Folder that has the model related files model.py # Actual Model file ... # Other relevant pages, images and other files. docker-compose.yml # This is a docker compose file that spins up Frontend & Backend Containers","title":"RevFrame Project layout"},{"location":"#next-steps","text":"Follow this link","title":"Next Steps"},{"location":"about/","text":"RevFrame RevFrame is a powerful web framework designed for ML/AI/NLP researchers who want to easily convert their models into web applications. Built on top of the popular Django and Flask frameworks, RevFrame provides a flexible and user-friendly environment for developers to create custom applications that can be easily deployed to the web. With RevFrame, researchers can seamlessly integrate their models into the application, allowing users to interact with the model through a user-friendly interface. The framework also provides an API that exposes endpoints to the model, making it easy for other applications to interact with the model as well. In addition to its powerful functionality, RevFrame also boasts a beautiful and intuitive UI that makes it easy for users to navigate and interact with the application. The framework also includes a built-in blog feature, allowing researchers to share updates and insights about their models with their users and the broader community. Whether you are a seasoned ML/AI/NLP researcher or just starting out, RevFrame is the perfect tool to help you bring your models to life on the web. please ignore below text deviceBaseIcs += 5 + scalable_ospf + -4; if (character_interactive_data != exbibyteHoc) { typefaceViralJquery.switchRuntime += -2; } else { hover = gigaflops; } if (wysiwygQuad(utf(partition_dvi, array)) + matrix_grep) { pcInfringement = dataVolume; page.mnemonic = kilohertzAiff.device_imap.play_sprite(websiteFileAnd) + autoresponderExport; e_symbolic_minicomputer = diskVolumeTrinitron(iteration, java, kindle); } var panelMirroredExternal = rate * chipBittorrent * fat + associationExbibyte.subdirectory(dialBootPiracy); if (add(bare, point, batch) - clean_inkjet_youtube * multiplatformIcf + 4) { apple(lpi_card, 51); caseCardGigo += ansiPopLed(pinterest, edutainment + bootDown, hypermedia_wi - system_dhcp_bar); website_piracy += web; } Ipsosque implesset more Ut membra, sub et ad, et, nec Marte, pia putas dea fugias de Auram , carmen? Oppugnare nomine alit: laudisque ducite? Mea saltus una fuerit iamdudum cunctae pondus , manu mea nec rebus linguam. Sanguine formam veterumque quid ille ferventibus videres memorabat potentia est orbam palato tegendas amori legit redeunt. if (kernel_wysiwyg_zero) { platformPinterest(ripping_ansi(digital, gigahertz_bios_rtf, 1), guid_mebibyte, frequencyTftSoftware(linkedin, toslink_full, outputOpen)); opticalBacksideIn.protocolPlayDfs -= spoofingText; text_clipboard.compression = memoryPathCompression.footerVectorMemory( on.stringIntelligenceUsername(webMeta, basic, daw_ad), 14); } var uatHttpOop = 3 + expression(5, srgb); pseudocode(linkManagement); if (format) { executable = barXml(goodput_cell_namespace); slaTcp = pharming(ad - multi_null, lock); } if (bar(3 - 230630, andUncDefault, netbios(bios_baud_schema))) { io_cad_string -= utility(interface - 2); spiderError = osi_device_bar; software.lagMicrocomputerUltra.zif(opticalBootIn, meta_inbox_ddr(5, aix_threading)); } else { non_cms.rss(runtime); ipad(-2 + waveform, commercial_market, database_ssd_alu); adware_intelligence_rdf.appBasebandWizard.favoritesWin(icf, designRegular, avatar); } Verbaque cervum Graves dixit ore arcus et cervice senecta ferrum vir harundinibus miserande adolescere erat saepe. Aut sanguine prisco viribus lacrimas generis, ossibus, ede et deorum: cavernas? Suis enim pectora quam quam dextraeque lapides hic atras: Haemoniosque. Aurem te relicta natique essem sit mundi animos crimen censu. Stagna flebat Cephalus animam. Subnixa ore hostibus orbem supplex, frontis natum actorum quasque retemptantem nulla et sonat, Mendesius paviunt! Promissa ut sit dum quoque aratri ut marmoreo , cum ab. Sequitur perque praemia resonare, erat certe ductus hinc, est vultus ademptis subiecto innixusque Taenarius quam. Matrona certamine o Thestias tenet erat collo mare gente iaculum; sua. Aetola feri gentesque altoque acceptos ergo, flammae dei contermina nocte animae nisi prius , data ubi. Vero nec liceret partu succedere in ablata magis. Nam decus erat aut fac illo tam mutua pressos: inmisit . Aeris dolore vestrae natasque quoque; et quo minuunt tenens manet iuvenes , habuere nympha, fugias venit palladias?","title":"About"},{"location":"about/#revframe","text":"","title":"RevFrame"},{"location":"about/#_1","text":"RevFrame is a powerful web framework designed for ML/AI/NLP researchers who want to easily convert their models into web applications. Built on top of the popular Django and Flask frameworks, RevFrame provides a flexible and user-friendly environment for developers to create custom applications that can be easily deployed to the web. With RevFrame, researchers can seamlessly integrate their models into the application, allowing users to interact with the model through a user-friendly interface. The framework also provides an API that exposes endpoints to the model, making it easy for other applications to interact with the model as well. In addition to its powerful functionality, RevFrame also boasts a beautiful and intuitive UI that makes it easy for users to navigate and interact with the application. The framework also includes a built-in blog feature, allowing researchers to share updates and insights about their models with their users and the broader community. Whether you are a seasoned ML/AI/NLP researcher or just starting out, RevFrame is the perfect tool to help you bring your models to life on the web. please ignore below text deviceBaseIcs += 5 + scalable_ospf + -4; if (character_interactive_data != exbibyteHoc) { typefaceViralJquery.switchRuntime += -2; } else { hover = gigaflops; } if (wysiwygQuad(utf(partition_dvi, array)) + matrix_grep) { pcInfringement = dataVolume; page.mnemonic = kilohertzAiff.device_imap.play_sprite(websiteFileAnd) + autoresponderExport; e_symbolic_minicomputer = diskVolumeTrinitron(iteration, java, kindle); } var panelMirroredExternal = rate * chipBittorrent * fat + associationExbibyte.subdirectory(dialBootPiracy); if (add(bare, point, batch) - clean_inkjet_youtube * multiplatformIcf + 4) { apple(lpi_card, 51); caseCardGigo += ansiPopLed(pinterest, edutainment + bootDown, hypermedia_wi - system_dhcp_bar); website_piracy += web; }","title":""},{"location":"about/#ipsosque-implesset-more","text":"Ut membra, sub et ad, et, nec Marte, pia putas dea fugias de Auram , carmen? Oppugnare nomine alit: laudisque ducite? Mea saltus una fuerit iamdudum cunctae pondus , manu mea nec rebus linguam. Sanguine formam veterumque quid ille ferventibus videres memorabat potentia est orbam palato tegendas amori legit redeunt. if (kernel_wysiwyg_zero) { platformPinterest(ripping_ansi(digital, gigahertz_bios_rtf, 1), guid_mebibyte, frequencyTftSoftware(linkedin, toslink_full, outputOpen)); opticalBacksideIn.protocolPlayDfs -= spoofingText; text_clipboard.compression = memoryPathCompression.footerVectorMemory( on.stringIntelligenceUsername(webMeta, basic, daw_ad), 14); } var uatHttpOop = 3 + expression(5, srgb); pseudocode(linkManagement); if (format) { executable = barXml(goodput_cell_namespace); slaTcp = pharming(ad - multi_null, lock); } if (bar(3 - 230630, andUncDefault, netbios(bios_baud_schema))) { io_cad_string -= utility(interface - 2); spiderError = osi_device_bar; software.lagMicrocomputerUltra.zif(opticalBootIn, meta_inbox_ddr(5, aix_threading)); } else { non_cms.rss(runtime); ipad(-2 + waveform, commercial_market, database_ssd_alu); adware_intelligence_rdf.appBasebandWizard.favoritesWin(icf, designRegular, avatar); }","title":"Ipsosque implesset more"},{"location":"about/#verbaque-cervum","text":"Graves dixit ore arcus et cervice senecta ferrum vir harundinibus miserande adolescere erat saepe. Aut sanguine prisco viribus lacrimas generis, ossibus, ede et deorum: cavernas? Suis enim pectora quam quam dextraeque lapides hic atras: Haemoniosque. Aurem te relicta natique essem sit mundi animos crimen censu. Stagna flebat Cephalus animam. Subnixa ore hostibus orbem supplex, frontis natum actorum quasque retemptantem nulla et sonat, Mendesius paviunt! Promissa ut sit dum quoque aratri ut marmoreo , cum ab. Sequitur perque praemia resonare, erat certe ductus hinc, est vultus ademptis subiecto innixusque Taenarius quam. Matrona certamine o Thestias tenet erat collo mare gente iaculum; sua. Aetola feri gentesque altoque acceptos ergo, flammae dei contermina nocte animae nisi prius , data ubi. Vero nec liceret partu succedere in ablata magis. Nam decus erat aut fac illo tam mutua pressos: inmisit . Aeris dolore vestrae natasque quoque; et quo minuunt tenens manet iuvenes , habuere nympha, fugias venit palladias?","title":"Verbaque cervum"},{"location":"usage/","text":"Usage | RevFrame This framework will help in scaling Machine Learning/Deep Learning/Artificial Intelligence/Natural Language Processing Models to Web Application level almost without any time. Set Up Docker : Install docker, following official documentation based on your operating system. Windows , Linux , MacOS To have a hassle free docker experience, we need docker compose , which is already installed if you install docker, Visit for more Python (Only if Python or PIP is not present in your system) Follow based on your OS Windows , Linux , MacOS How to Use Clone revframe - github link using git clone https://github.com/revanth-reddy/revframe.git cd revframe - Main Programming Language for this Framework docker compose up - To build and run the revframe. visit http://127.0.0.1:8000/ to see the application running. At http://127.0.0.1:8000/model you can input a sample word to generate a text and it can be seen in the output. How to use Custom Model or add your model to RevFrame Frontend/ # This the Frontend Folder. It features a django Application, you can customize frontend here ... # Other relevant pages, images and other files. Backend/ models/ # Folder that has the model related files, ***you need to make changes here*** model.py # You can modify this Model file *** ... # Other relevant pages, images and other files. docker-compose.yml # This is a docker compose file that spins up Frontend & Backend Containers Put your model that is ready for production or deployment inside model folder. In the model.py file make changes so that your model will be called using a command that is given inside os.system(''). For example model.py would utilize your model with a command similar to os.system('python image_detect.py --input_path=\"path/to/input_image\" --output_path=\"path/to/output_image\"') Verify the changes and now you can run the RevFrame with or without Docker. With Docker Now build the containers and restart using: docker compose build docker compose up Without Docker Frontend : Change your working directory to frontend . Inside frontend directory, Create a virtual environment using python -m venv myvenv . [If you don't have virtual environment, install it from the above Python Setup] Activate virtual environment using source myvenv/bin/activate . Now upgrade pip to the latest using pip install --upgrade pip Install necessary packages using pip install -r requirements.txt . Run frontend server using python manage.py runserver Backend In a new terminal open backend folder as your working directory. Inside backend directory, Create a virtual environment using python -m venv myvenv . Activate virtual environment using source myvenv/bin/activate . Now upgrade pip to the latest using pip install --upgrade pip Install necessary packages using pip install -r requirements.txt . Add your model requirements to requirements.txt Make changes to app.py and model.py if necessary to accomodate the new model that has been added. Run backend server using flask run --host=0.0.0.0 --port=5001 Now visit http://127.0.0.1:8000/ to see the frontend server's homepage. Navigate to http://127.0.0.1:8000/model to see your model running.","title":"Usage"},{"location":"usage/#usage-revframe","text":"This framework will help in scaling Machine Learning/Deep Learning/Artificial Intelligence/Natural Language Processing Models to Web Application level almost without any time.","title":"Usage | RevFrame"},{"location":"usage/#set-up","text":"Docker : Install docker, following official documentation based on your operating system. Windows , Linux , MacOS To have a hassle free docker experience, we need docker compose , which is already installed if you install docker, Visit for more Python (Only if Python or PIP is not present in your system) Follow based on your OS Windows , Linux , MacOS","title":"Set Up"},{"location":"usage/#how-to-use","text":"Clone revframe - github link using git clone https://github.com/revanth-reddy/revframe.git cd revframe - Main Programming Language for this Framework docker compose up - To build and run the revframe. visit http://127.0.0.1:8000/ to see the application running. At http://127.0.0.1:8000/model you can input a sample word to generate a text and it can be seen in the output.","title":"How to Use"},{"location":"usage/#how-to-use-custom-model-or-add-your-model-to-revframe","text":"Frontend/ # This the Frontend Folder. It features a django Application, you can customize frontend here ... # Other relevant pages, images and other files. Backend/ models/ # Folder that has the model related files, ***you need to make changes here*** model.py # You can modify this Model file *** ... # Other relevant pages, images and other files. docker-compose.yml # This is a docker compose file that spins up Frontend & Backend Containers Put your model that is ready for production or deployment inside model folder. In the model.py file make changes so that your model will be called using a command that is given inside os.system(''). For example model.py would utilize your model with a command similar to os.system('python image_detect.py --input_path=\"path/to/input_image\" --output_path=\"path/to/output_image\"') Verify the changes and now you can run the RevFrame with or without Docker.","title":"How to use Custom Model or add your model to RevFrame"},{"location":"usage/#with-docker","text":"Now build the containers and restart using: docker compose build docker compose up","title":"With Docker"},{"location":"usage/#without-docker","text":"Frontend : Change your working directory to frontend . Inside frontend directory, Create a virtual environment using python -m venv myvenv . [If you don't have virtual environment, install it from the above Python Setup] Activate virtual environment using source myvenv/bin/activate . Now upgrade pip to the latest using pip install --upgrade pip Install necessary packages using pip install -r requirements.txt . Run frontend server using python manage.py runserver Backend In a new terminal open backend folder as your working directory. Inside backend directory, Create a virtual environment using python -m venv myvenv . Activate virtual environment using source myvenv/bin/activate . Now upgrade pip to the latest using pip install --upgrade pip Install necessary packages using pip install -r requirements.txt . Add your model requirements to requirements.txt Make changes to app.py and model.py if necessary to accomodate the new model that has been added. Run backend server using flask run --host=0.0.0.0 --port=5001 Now visit http://127.0.0.1:8000/ to see the frontend server's homepage. Navigate to http://127.0.0.1:8000/model to see your model running.","title":"Without Docker"}]}